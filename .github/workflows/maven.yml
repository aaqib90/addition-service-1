# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven, Docker push

on:
  push:
    branches: 
    - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build the Docker images
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{github.sha}} .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{github.sha}}

        sed -i'' -e 's/DOCKER_USERNAME/${{ secrets.DOCKER_USERNAME }}/g' -e 's/K8S_URL/${{ secrets.K8S_URL }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' k8s.yaml
        
        kubectl apply -f k8s.yaml

    # - name: Set up JDK 1.8
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: 1.8

    # - name: Cache the Maven packages to speed up build
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2   
    
