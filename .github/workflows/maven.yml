# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: 
    - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn -B package --file pom.xml
        
        echo "Build Success"

        ls 
        
        pwd

    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@9379083e426e2e84abb80c8c091f5cdeb7d3fd7a
      uses: docker/build-push-action@v2.3.0
      with:
        # Builder instance
        builder: # optional
        # Build's context is the set of files located in the specified PATH or URL
        context: # optional
        # Path to the Dockerfile
        file: # optional
        # List of build-time variables
        build-args: # optional
        # List of metadata for an image
        labels: # optional
        # List of tags
        tags: addition-service-1:${{github.sha}}
        # Always attempt to pull a newer version of the image
        pull: # optional, default is false
        # Sets the target stage to build
        target: # optional
        # List of extra privileged entitlement (eg. network.host,security.insecure)
        allow: # optional
        # Do not use cache when building the image
        no-cache: # optional, default is false
        # List of target platforms for build
        platforms: # optional
        # Load is a shorthand for --output=type=docker
        load: # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: # optional, default is false
        # List of output destinations (format: type=local,dest=path)
        outputs: # optional
        # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
        cache-from: # optional
        # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
        cache-to: # optional
        # List of secrets to expose to the build (eg. key=string, GIT_AUTH_TOKEN=mytoken)
        secrets: # optional
        # List of secret files to expose to the build (eg. key=filename, MY_SECRET=./secret.txt)
        secret-files: # optional
        # List of SSH agent socket or keys to expose to the build
        ssh: # optional
        # GitHub Token used to authenticate against a repository for Git context
        github-token: # optional, default is ${{ github.token }}      
    
